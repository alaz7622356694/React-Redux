[{"C:\\Users\\Alireza\\Desktop\\React-redux\\src\\index.js":"1","C:\\Users\\Alireza\\Desktop\\React-redux\\src\\App.js":"2","C:\\Users\\Alireza\\Desktop\\React-redux\\src\\containers\\Counter.js":"3","C:\\Users\\Alireza\\Desktop\\React-redux\\src\\components\\CounterControl\\CounterControl.js":"4","C:\\Users\\Alireza\\Desktop\\React-redux\\src\\components\\CounterOutput\\CounterOutput.js":"5"},{"size":235,"mtime":1624130989014,"results":"6","hashOfConfig":"7"},{"size":263,"mtime":1624130321738,"results":"8","hashOfConfig":"7"},{"size":1512,"mtime":1624130508851,"results":"9","hashOfConfig":"7"},{"size":214,"mtime":1607369516000,"results":"10","hashOfConfig":"7"},{"size":187,"mtime":1624027255236,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"c70ecx",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\Alireza\\Desktop\\React-redux\\src\\index.js",["24"],"C:\\Users\\Alireza\\Desktop\\React-redux\\src\\App.js",[],"C:\\Users\\Alireza\\Desktop\\React-redux\\src\\containers\\Counter.js",["25"],"import React from 'react'\n\nimport CounterControl from '../components/CounterControl/CounterControl'\nimport CounterOutput from '../components/CounterOutput/CounterOutput'\n\nclass Counter extends React.Component {\n  state = {\n    counter: 0,\n  }\n\n  counterChangedHandler = (action, value) => {\n    switch (action) {\n      case 'inc':\n        this.setState((prevState) => {\n          return { counter: prevState.counter + 1 }\n        })\n        break\n      case 'dec':\n        this.setState((prevState) => {\n          return { counter: prevState.counter - 1 }\n        })\n        break\n      case 'add':\n        this.setState((prevState) => {\n          return { counter: prevState.counter + value }\n        })\n        break\n      case 'sub':\n        this.setState((prevState) => {\n          return { counter: prevState.counter - value }\n        })\n        break\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <CounterOutput value={this.state.counter} />\n        <CounterControl\n          label=\"Increment\"\n          clicked={() => this.counterChangedHandler('inc')}\n        />\n        <CounterControl\n          label=\"Decrement\"\n          clicked={() => this.counterChangedHandler('dec')}\n        />\n        <CounterControl\n          label=\"Increment 2 \"\n          clicked={() => this.counterChangedHandler('add', 2)}\n        />\n        <CounterControl\n          label=\"Decrement 2 \"\n          clicked={() => this.counterChangedHandler('sub', 2)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Counter\n",["26","27"],"C:\\Users\\Alireza\\Desktop\\React-redux\\src\\components\\CounterControl\\CounterControl.js",[],"C:\\Users\\Alireza\\Desktop\\React-redux\\src\\components\\CounterOutput\\CounterOutput.js",[],{"ruleId":"28","severity":1,"message":"29","line":9,"column":7,"nodeType":"30","messageId":"31","endLine":9,"endColumn":12},{"ruleId":"32","severity":1,"message":"33","line":12,"column":5,"nodeType":"34","messageId":"35","endLine":33,"endColumn":6},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},"no-unused-vars","'store' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-global-assign","no-unsafe-negation"]